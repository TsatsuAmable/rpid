{
    "docs": [
        {
            "location": "/", 
            "text": "RPID Project\n\n\nOverview\n\n\nIt has become good data practice to use persistent identifiers (PIDs) to identify digital data products whether a product is a collection, a file, or an object of some type. Naming solutions for digital data products eventually resolve a PID down to the digital object it identifies, but \nthe current landscape is limited by multiple solutions with weak interoperability, and inconsistent protocols\n for getting from PID to data object. In a world of increasing PID use, we will soon be awash with billions of PIDs that all resolve to data objects using various inconsistent and unpredictable approaches, making it difficult to build higher level services that cross the various approaches. \n\n\nIn this 12+24 month project, \nwe will stand up and support a robust PID testbed\n (called the RPID testbed (pronounced \"rapid\") to stimulate and enable evaluation of powerful new complementary outputs of the \nResearch Data Alliance\n (RDA) in PID oriented data management. The testbed is \nresponsive to data driven priorities in science and education\n, specifically as part of the cyberinfrastructure ecosystem that accelerates a broad spectrum of data-intensive research (NSF Director unveils 2016). The advancements developed and tested here we believe have the \ntransformative magnitude to stimulate an entire ecosystem of new discovery services\n for research data.\n\n\nServices (availability expected mid-summer)\n\n\n\n\nHandle Service - Development services can be seen at https://handle-dev.grid.iu.edu:8080\n\n\nData Type Registry - Development services can be see at https://dtr-dev.grid.iu.edu:8080\n\n\nRDA PID Kernel Information WG profiles - several strawman profiles will be available for experimentation. End of Summer '17\n\n\nRDA Collections WG API. End of Summer '17 \n\n\nRDA PIT API - enhanced to work with PID Kernel Information profile; available as a downloadable SDK. End of Summer '17\n\n\n\n\nOpen Access for Data Science Researchers\n\n\nUsage Policies\n\n\n\n\nThe RPID testbed can be used for research, education, non-profit, or pre-competitive use\n\n\nThe RPID testbed assigns only test handles, allowing for exploratory work. \n\n\nHandles assigned by the testbed will be on a project basis, to avoid collisions. Your prefix will be 11723.9.test.\\\n\n\nProjects interested in using the testbed are strongly advised to join the RPID User Advisory Group\n\n\nFollow the work at https://github.com/rpidproject.  \n\n\nTo join the RPID User Advisory Group or otherwise reach us, we are at rpid-l@iu.edu\n\n\n\n\nRequesting Access\n\n\n\n\nPlease contact the RPID working group at rpid-l@iu.edu to get started.   You will register your project, be assigned a prefix, and can then start using the services. \n\n\n\n\nArchitectual Diagram\n\n\nInsert pic here. \n\n\nCommunicate With the Project Team\n\n\nPlease feel free to contact the RPID Project Team at rpid-l@iu.edu", 
            "title": "Home"
        }, 
        {
            "location": "/#rpid-project", 
            "text": "", 
            "title": "RPID Project"
        }, 
        {
            "location": "/#overview", 
            "text": "It has become good data practice to use persistent identifiers (PIDs) to identify digital data products whether a product is a collection, a file, or an object of some type. Naming solutions for digital data products eventually resolve a PID down to the digital object it identifies, but  the current landscape is limited by multiple solutions with weak interoperability, and inconsistent protocols  for getting from PID to data object. In a world of increasing PID use, we will soon be awash with billions of PIDs that all resolve to data objects using various inconsistent and unpredictable approaches, making it difficult to build higher level services that cross the various approaches.   In this 12+24 month project,  we will stand up and support a robust PID testbed  (called the RPID testbed (pronounced \"rapid\") to stimulate and enable evaluation of powerful new complementary outputs of the  Research Data Alliance  (RDA) in PID oriented data management. The testbed is  responsive to data driven priorities in science and education , specifically as part of the cyberinfrastructure ecosystem that accelerates a broad spectrum of data-intensive research (NSF Director unveils 2016). The advancements developed and tested here we believe have the  transformative magnitude to stimulate an entire ecosystem of new discovery services  for research data.", 
            "title": "Overview"
        }, 
        {
            "location": "/#services-availability-expected-mid-summer", 
            "text": "Handle Service - Development services can be seen at https://handle-dev.grid.iu.edu:8080  Data Type Registry - Development services can be see at https://dtr-dev.grid.iu.edu:8080  RDA PID Kernel Information WG profiles - several strawman profiles will be available for experimentation. End of Summer '17  RDA Collections WG API. End of Summer '17   RDA PIT API - enhanced to work with PID Kernel Information profile; available as a downloadable SDK. End of Summer '17", 
            "title": "Services (availability expected mid-summer)"
        }, 
        {
            "location": "/#open-access-for-data-science-researchers", 
            "text": "", 
            "title": "Open Access for Data Science Researchers"
        }, 
        {
            "location": "/#usage-policies", 
            "text": "The RPID testbed can be used for research, education, non-profit, or pre-competitive use  The RPID testbed assigns only test handles, allowing for exploratory work.   Handles assigned by the testbed will be on a project basis, to avoid collisions. Your prefix will be 11723.9.test.\\  Projects interested in using the testbed are strongly advised to join the RPID User Advisory Group  Follow the work at https://github.com/rpidproject.    To join the RPID User Advisory Group or otherwise reach us, we are at rpid-l@iu.edu", 
            "title": "Usage Policies"
        }, 
        {
            "location": "/#requesting-access", 
            "text": "Please contact the RPID working group at rpid-l@iu.edu to get started.   You will register your project, be assigned a prefix, and can then start using the services.", 
            "title": "Requesting Access"
        }, 
        {
            "location": "/#architectual-diagram", 
            "text": "Insert pic here.", 
            "title": "Architectual Diagram"
        }, 
        {
            "location": "/#communicate-with-the-project-team", 
            "text": "Please feel free to contact the RPID Project Team at rpid-l@iu.edu", 
            "title": "Communicate With the Project Team"
        }, 
        {
            "location": "/11-May-2017/", 
            "text": "RPID Meeting Agenda Items\n\n\n\n\nExamples\n\n\nPuppetizing\n\n\nPrefixes\n\n\nKarst Node\n\n\nWeb Content\n\n\nUAG\n\n\n\n\nRPID Meeting Minutes\n\n\nExamples\n\n\nLarry created a strawman. Try some examples to actual cases to see how this would work. \n  Two issues:\n     1. complexity - worked but was complicated \n     2. Need several instances to create a interesting (usable) environement\n\n\nIt is easy to confuse DTrecord with this PID kernel strawman. Two metadata schemes that dont fit together. Deal with Typed values. 16 types in strawman. To use these types they need to be documented and described in an understandable way to be used. Need records to apply these to. \n   * Bridget will do this for a few types of data. \n   * Robert will try with VMs on Jetstream. \n   * Gabriele will try with Rice genomic data.\n   * Isuru has tried this with SEED data, will discuss issues encountered on next call. \n      * When publishing wanted to do per/day per/device in kernal. Could not fit device ID, nothing matched with strawman. \nAt the next call we will do some comparisons to see where issues were encountered. \nGiven this identifier, what can I do next?\nFiltering notion takes presedence. \nWhat are the purposes of the handle service? Low-level services, not querying directly but infrastructure.\nHandle service only does one this returns a handle record.\n\n\nPuppetizing\n\n\nBridget had her first discussion. Description of what we're trying to do. \nRob will review this consultation and we'll talk about it more before next meeting.\nCan be published to the DTR working group at RDA. \n\n\nKarst Node\n\n\nExperimental environment\nJuly before installation will be possible\nAWS instances will not be persistent only for experimentation\nWe will keep a dev-instance along with prime instance\n\n\nPrefixes\n\n\nUse of prefixes with respect to test prefixes\nClearly indicated prefixes are \ntest\n prifixes\nTwo constraints\n   1. the relation to prefix to handle service is 1:1\n   2. relationship of handles services to prifixes is 1:many\n   3. as long as no one mistakes these for longterm PIDs it is inconsequential \nPrefix with no or 1 delimiter are global while sub-prifixes with prifixes 2+ from individual service.\nCreating policy statement regarding prefixes. \n\n\nBridget, Rob and Isuru will send slides.", 
            "title": "11-May-2017 Meeting"
        }, 
        {
            "location": "/11-May-2017/#rpid-meeting-agenda-items", 
            "text": "Examples  Puppetizing  Prefixes  Karst Node  Web Content  UAG", 
            "title": "RPID Meeting Agenda Items"
        }, 
        {
            "location": "/11-May-2017/#rpid-meeting-minutes", 
            "text": "", 
            "title": "RPID Meeting Minutes"
        }, 
        {
            "location": "/11-May-2017/#examples", 
            "text": "Larry created a strawman. Try some examples to actual cases to see how this would work. \n  Two issues:\n     1. complexity - worked but was complicated \n     2. Need several instances to create a interesting (usable) environement  It is easy to confuse DTrecord with this PID kernel strawman. Two metadata schemes that dont fit together. Deal with Typed values. 16 types in strawman. To use these types they need to be documented and described in an understandable way to be used. Need records to apply these to. \n   * Bridget will do this for a few types of data. \n   * Robert will try with VMs on Jetstream. \n   * Gabriele will try with Rice genomic data.\n   * Isuru has tried this with SEED data, will discuss issues encountered on next call. \n      * When publishing wanted to do per/day per/device in kernal. Could not fit device ID, nothing matched with strawman. \nAt the next call we will do some comparisons to see where issues were encountered. \nGiven this identifier, what can I do next?\nFiltering notion takes presedence. \nWhat are the purposes of the handle service? Low-level services, not querying directly but infrastructure.\nHandle service only does one this returns a handle record.", 
            "title": "Examples"
        }, 
        {
            "location": "/11-May-2017/#puppetizing", 
            "text": "Bridget had her first discussion. Description of what we're trying to do. \nRob will review this consultation and we'll talk about it more before next meeting.\nCan be published to the DTR working group at RDA.", 
            "title": "Puppetizing"
        }, 
        {
            "location": "/11-May-2017/#karst-node", 
            "text": "Experimental environment\nJuly before installation will be possible\nAWS instances will not be persistent only for experimentation\nWe will keep a dev-instance along with prime instance", 
            "title": "Karst Node"
        }, 
        {
            "location": "/11-May-2017/#prefixes", 
            "text": "Use of prefixes with respect to test prefixes\nClearly indicated prefixes are  test  prifixes\nTwo constraints\n   1. the relation to prefix to handle service is 1:1\n   2. relationship of handles services to prifixes is 1:many\n   3. as long as no one mistakes these for longterm PIDs it is inconsequential \nPrefix with no or 1 delimiter are global while sub-prifixes with prifixes 2+ from individual service.\nCreating policy statement regarding prefixes.   Bridget, Rob and Isuru will send slides.", 
            "title": "Prefixes"
        }, 
        {
            "location": "/08-June-2017/", 
            "text": "RPID Meeting Agenda Items\n\n\n\n\nExamples\n\n\nPuppetizing\n\n\nKarst Node\n\n\nUAG\n\n\nProfiles\n\n\n\n\nRPID Meeting Minutes\n\n\nExamples\n\n\nPuppetizing\n\n\nKarst Node\n\n\nUAG", 
            "title": "08-June-2017  Meeting"
        }, 
        {
            "location": "/08-June-2017/#rpid-meeting-agenda-items", 
            "text": "Examples  Puppetizing  Karst Node  UAG  Profiles", 
            "title": "RPID Meeting Agenda Items"
        }, 
        {
            "location": "/08-June-2017/#rpid-meeting-minutes", 
            "text": "", 
            "title": "RPID Meeting Minutes"
        }, 
        {
            "location": "/08-June-2017/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/08-June-2017/#puppetizing", 
            "text": "", 
            "title": "Puppetizing"
        }, 
        {
            "location": "/08-June-2017/#karst-node", 
            "text": "", 
            "title": "Karst Node"
        }, 
        {
            "location": "/08-June-2017/#uag", 
            "text": "", 
            "title": "UAG"
        }
    ]
}